/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.arch_core = '2.1.0'
versions.room = '2.2.5'
versions.lifecycle = '2.2.0'
versions.lives = "1.3.0"
versions.support = '1.2.0-rc01'
versions.supportWidget = '1.0.0'
versions.dagger = "2.28.3"
versions.junit = "4.13"
versions.espresso = '3.3.0'
versions.retrofit = "2.9.0"
versions.okhttp = "4.8.1"
versions.mockwebserver = "3.8.1"
versions.apache_commons = "2.5"
versions.mockito = "3.5.9"
versions.dexmaker = "2.2.0"
versions.constraint_layout = '2.0.0-beta8'
versions.glide = "4.11.0"
versions.timber = "4.5.1"
versions.android_gradle_plugin = '4.0.1'
versions.atsl_runner = '1.1.0-alpha4'
versions.atsl_rules = "1.0.1"
versions.kotlin = "1.4.0"
versions.coroutines = "1.3.9"
versions.paging = "1.0.0"
versions.work = "1.0.0-alpha02"
versions.workx = "2.0.1-rc01"
versions.mediax = "1.1.0"
versions.google_play_services = "17.0.0"
versions.chucker = "3.2.0"
versions.new_relic = "5.7.1"
versions.install_ref = "1.0"
versions.picasso = "2.5.2"
versions.photo_view = "2.1.3"
versions.event_bus = "3.1.1"
versions.signature_pad = "1.2.1"
versions.permissions = "1.1.2"
versions.gson = "2.8.5"
versions.guava = "27.1-android"
versions.facebook = "[4,5)"
versions.fcm = "17.3.3"
versions.performance = "16.2.2"
versions.instanceId = "17.0.4"
versions.find_bugs = "1.3.9"
versions.google_services = "4.3.0"
versions.multidex = '2.0.1'
versions.threetenabp = "1.2.1"
versions.cardstackview = "2.0.0"
versions.viewanimator = "1.1.0"
versions.pagingVersion = "2.1.0"
versions.fast_list = "1.3"
versions.kotest = "4.2.3"
def deps = [:]

def support = [:]
support.annotations = "androidx.annotation:annotation:1.1.0"
support.appcompat = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.supportWidget"
support.cardview = "androidx.cardview:cardview:$versions.supportWidget"
support.design = "com.google.android.material:material:$versions.supportWidget"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.supportWidget"
support.core_utils = "com.android.support:support-core-utils:$versions.support"
support.gridlayout = "androidx.gridlayout:gridlayout:$versions.supportWidget"
support.customtabs = "androidx.browser:browser:$versions.support"
support.multidex = "androidx.multidex:multidex:$versions.multidex"
support.dynamic_animation = 'androidx.dynamicanimation:dynamicanimation:1.0.0'
support.mediax = "androidx.media:media:$versions.mediax"
support.preferences = 'androidx.preference:preference:1.1.1'
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.testing = "android.arch.persistence.room:testing:$versions.room"
room.ktx = "androidx.room:room-ktx:$versions.room"

deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.lives = "com.snakydesign.livedataextensions:lives:$versions.lives"
lifecycle.java8 = "android.arch.lifecycle:common-java8:$versions.lifecycle"
lifecycle.compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
lifecycle.runtime_ktx = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.coroutine_adapter = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit

def okhttp = [:]
okhttp.runtime = "com.squareup.okhttp3:okhttp:$versions.okhttp"
okhttp.logger = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
deps.okhttp = okhttp

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger

def hilt = [:]
hilt.plugin = "com.google.dagger:hilt-android-gradle-plugin:2.28-alpha"
hilt.runtime = "com.google.dagger:hilt-android:2.28-alpha"
hilt.compiler = "com.google.dagger:hilt-android-compiler:2.28-alpha"
deps.hilt = hilt

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_runner"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.android = "org.mockito:mockito-android:$versions.mockito"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.coroutine_core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
kotlin.coroutine_android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
kotlin.coroutine_android_test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"
kotlin.reflect= "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
kotlin.mockito_kotlin="com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
deps.kotlin = kotlin

def maven = [:]
maven.plugin = "com.github.dcendents:android-maven-gradle-plugin:1.5"
deps.maven = maven

def google = [:]
google.services = "com.google.gms:google-services:$versions.google_services"
google.location = "com.google.android.gms:play-services-location:$versions.google_play_services"
google.gcm = "com.google.android.gms:play-services-gcm:$versions.google_play_services"
google.auth = "com.google.android.gms:play-services-auth-api-phone:$versions.google_play_services"
google.gson = "com.google.code.gson:gson:$versions.gson"
google.find_bugs = "com.google.code.findbugs:jsr305:$versions.find_bugs"
google.guava = "com.google.guava:guava:$versions.guava"
google.analytics = "com.google.android.gms:play-services-analytics:16.0.6"
google.playcore = "com.google.android.play:core:1.6.4"
google.auth2 = "com.google.android.gms:play-services-auth:18.0.0"
deps.google = google

def firebase = [:]
firebase.fcm = "com.google.firebase:firebase-messaging:$versions.fcm"
firebase.performance = "com.google.firebase:firebase-perf:$versions.performance"
firebase.instanceId = "com.google.firebase:firebase-iid:$versions.instanceId"
firebase.core = "com.google.firebase:firebase-core:16.0.6"
firebase.crash = "com.google.firebase:firebase-crashlytics:17.2.1"
firebase.crash_gradle = "com.google.firebase:firebase-crashlytics-gradle:2.2.0"
deps.firebase = firebase


def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide


versions.bintray = "1.7.2"
def bintray = [:]
bintray.plugin = "com.jfrog.bintray.gradle:gradle-bintray-plugin:$versions.bintray"
deps.bintray = bintray

ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 19
build_versions.target_sdk = 30
build_versions.compile_sdk = 30
ext.build_versions = build_versions

def work = [:]
work.runtime = "android.arch.work:work-runtime:$versions.work"
work.testing = "android.arch.work:work-testing:$versions.work"
work.firebase = "android.arch.work:work-firebase:$versions.work"
work.runtime_ktx = "android.arch.work:work-runtime-ktx:$versions.work"
deps.work = work


def workx = [:]
workx.runtime = "androidx.work:work-runtime:$versions.workx"
workx.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.workx"
deps.workx = workx

ext.deps = deps

versions.junit5Lib = "5.6.2"
def junit5 = [:]
junit5.api = "org.junit.jupiter:junit-jupiter-api:$versions.junit5Lib" // add as testImplementation
junit5.engine = "org.junit.jupiter:junit-jupiter-engine:$versions.junit5Lib" // add as testRuntimeOnly
junit5.params = "org.junit.jupiter:junit-jupiter-params:$versions.junit5Lib" // add as testImplementation
junit5.vintage = "org.junit.vintage:junit-vintage-engine:$versions.junit5Lib" // add as testRuntimeOnly

deps.junit5 = junit5

def delegate_adapter=[:]
delegate_adapter.delegate= "com.hannesdorfmann:adapterdelegates4:4.3.0"
delegate_adapter.snapshot= "com.hannesdorfmann:adapterdelegates4:4.0.1-SNAPSHOT"
delegate_adapter.dsl = "com.hannesdorfmann:adapterdelegates4-kotlin-dsl:4.3.0"
delegate_adapter.dsl_synthetic = "com.hannesdorfmann:adapterdelegates4-kotlin-dsl-layoutcontainer:4.3.0"
delegate_adapter.view_binding = "com.hannesdorfmann:adapterdelegates4-kotlin-dsl-viewbinding:4.3.0"
deps.delegate_adapter=delegate_adapter


def kotest = [:]
kotest.runner = "io.kotest:kotest-runner-junit5:${versions.kotest}"
kotest.core =  "io.kotest:kotest-assertions-core-jvm:${versions.kotest}"
deps.kotest = kotest

def android = [:]
android.plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.android = android

deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit4 = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.chucker = "com.github.ChuckerTeam.Chucker:library:$versions.chucker"
deps.chucker_no_op = "com.github.ChuckerTeam.Chucker:library-no-op:$versions.chucker"
deps.photo_view = "com.github.chrisbanes:PhotoView:$versions.photo_view"
deps.permissions = "com.justadeveloper96.android:permissionhelper:$versions.permissions"
deps.event_bus = "org.greenrobot:eventbus:$versions.event_bus"
deps.signature_pad = "com.github.gcacace:signature-pad:$versions.signature_pad"
deps.picasso = "com.squareup.picasso:picasso:$versions.picasso"
deps.juspay = "in.juspay:godel:$versions.juspay"
deps.apps_flyer = "com.appsflyer:af-android-sdk:$versions.apps_flyer"
deps.install_ref = "com.android.installreferrer:installreferrer:$versions.install_ref"
deps.ux_cam = "com.uxcam:uxcam:$versions.ux_cam"
deps.nine_old_android = "com.nineoldandroids:library:$versions.nine_old_android"
deps.evernote_job = "com.evernote:android-job:$versions.evernote_job"
deps.threetenabp = "com.jakewharton.threetenabp:threetenabp:$versions.threetenabp"
deps.shimmer = "com.facebook.shimmer:shimmer:0.3.0'"
deps.shape_of_view = "com.github.florent37:shapeofview:$versions.shapeOfView"
deps.paging = "androidx.paging:paging-runtime:$versions.pagingVersion"
deps.pagingTest = "androidx.paging:paging-common:$versions.pagingVersion"
deps.carousel_indicator = "com.romandanylyk:pageindicatorview:1.0.3"
deps.fast_list = "bg.devlabs.fastlist:fast-list:$versions.fast_list"
deps.vector_master = "com.github.tarek360.RichPath:animator:0.1.1"
deps.kluent = "org.amshove.kluent:kluent-android:$versions.kluent"
deps.vox_video_sdk = "vox-cpaas:connectsdk:$versions.vox_video_sdk"
deps.chuck = 'com.readystatesoftware.chuck:library:1.1.0'


deps.javax_inject = 'javax.inject:javax.inject:1'
deps.javax_annotation = 'javax.annotation:jsr250-api:1.0'
deps.core_ktx = 'androidx.core:core-ktx:1.3.1'
deps.fragment_ktx = 'androidx.fragment:fragment-ktx:1.2.5'


def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}
ext.addRepos = this.&addRepos
